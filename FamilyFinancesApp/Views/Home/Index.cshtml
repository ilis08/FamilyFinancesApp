@model UserInfo
@using System.Globalization;

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome @User.Identity.Name</h1>

    <h3>Your budget is @Model.Money.ToString("c", CultureInfo.CreateSpecificCulture("en-US"))</h3>

    <br />

    <div class="row">
        <div class="col-6">
            <div id="chartIncome">
            </div>
        </div>
        <div class="col-6">
            <div id="chartSpending">
            </div>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-4">
        </div>
        <div class="col-2">
            <a class="btn btn-success" asp-action="ManageIncomes">Manage incomes</a>
        </div>
        <div class="col-2">
            <a class="btn btn-primary" asp-action="ManageSpendings">Manage spendings</a>
        </div>
        <div class="col-4">
        </div>
    </div>
</div>

@section Scripts {
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        $(function () {
            $.ajax({
                type: 'GET',
                url: '/Spending/GetSpendingChart',
                success: function (chartsdata) {
                    // Callback that creates and populates a data table,
                    // instantiates the pie chart, passes in the data and
                    // draws it.

                    //get jsonList from Object
                    var Data = chartsdata.jsonList;
                    var data = new google.visualization.DataTable();

                    data.addColumn('string', 'SpendingTypeName');
                    data.addColumn('number', 'SpendingCount');

                    //Loop through each list data
                    for (var i = 0; i < Data.length; i++) {
                        data.addRow([Data[i].spendingTypeName, Data[i].spendingCount]);
                    }

                    // Instantiate and draw our chart, passing in some options
                    var chart = new google.visualization.PieChart(document.getElementById('chartIncome'));

                    //Draw pie chart command with data and chart options
                    chart.draw(data,
                        {
                            title: "Google pie Chart in ASP.NET Core MVC",
                            position: "top",
                            fontsize: "14px",
                            is3D: true
                        });

                },
                error: function () {
                    alert("Error loading data! Please try again.");
                }
            });
        })

    }
</script>

<script type="text/javascript">
    
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        $(function () {
            $.ajax({
                type: 'GET',
                url: '/Spending/GetSpendingChart',
                success: function (chartsdata) {
                    // Callback that creates and populates a data table,
                    // instantiates the pie chart, passes in the data and
                    // draws it.

                    //get jsonList from Object
                    var Data = chartsdata.jsonList;
                    var data = new google.visualization.DataTable();

                    data.addColumn('string', 'SpendingTypeName');
                    data.addColumn('number', 'SpendingCount');

                    //Loop through each list data
                    for (var i = 0; i < Data.length; i++) {
                        data.addRow([Data[i].spendingTypeName, Data[i].spendingCount]);
                    }

                    // Instantiate and draw our chart, passing in some options
                    var chart = new google.visualization.PieChart(document.getElementById('chartSpending'));

                    //Draw pie chart command with data and chart options
                    chart.draw(data,
                        {
                            title: "Income chart by Income type",
                            position: "top",
                            fontsize: "14px",
                            is3D: true
                        });

                },
                error: function () {
                    alert("Error loading data! Please try again.");
                }
            });
        })

    }
</script>
}